package bot2

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"mybot/db"
)

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func MainKeyboardWithBack() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üì• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"),
			tgbotapi.NewKeyboardButton("üóì –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìã –ú–æ–∏ –ø–æ—Å—Ç—ã"),
			tgbotapi.NewKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üîÑ –°–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª"),
		),
	)
}

// ‚úÖ –°—Ç–∏–ª–∏, –∫–∞–∫ –≤ publisher.go
var Style = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("ü§ì –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π"),
		tgbotapi.NewKeyboardButton("üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π"),
		tgbotapi.NewKeyboardButton("üé≠ –õ–∏—Ä–∏—á–µ—Å–∫–∏–π"),
	),
)

var Language = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
		tgbotapi.NewKeyboardButton("üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π"),
	),
)

var Length = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚úèÔ∏è –ö–æ—Ä–æ—Ç–∫–∏–π"),
		tgbotapi.NewKeyboardButton("üìÑ –°—Ä–µ–¥–Ω–∏–π"),
		tgbotapi.NewKeyboardButton("üìö –î–ª–∏–Ω–Ω—ã–π"),
	),
)

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤
func EditPostKeyboard(posts []db.ScheduledPost) tgbotapi.ReplyKeyboardMarkup {
	rows := [][]tgbotapi.KeyboardButton{}
	for i := range posts {
		btn := tgbotapi.NewKeyboardButton(fmt.Sprintf("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å %d", i+1))
		rows = append(rows, tgbotapi.NewKeyboardButtonRow(btn))
	}
	rows = append(rows, tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
	))
	return tgbotapi.NewReplyKeyboard(rows...)
}

func ChannelChoiceKeyboard(channels []db.Channel) tgbotapi.ReplyKeyboardMarkup {
	rows := []tgbotapi.KeyboardButton{}
	for _, ch := range channels {
		rows = append(rows, tgbotapi.NewKeyboardButton("@"+ch.ChannelTitle))
	}
	keyboard := tgbotapi.NewReplyKeyboard(rows)
	keyboard.ResizeKeyboard = true
	return keyboard
}
func DeletePostKeyboard(posts []db.ScheduledPost) tgbotapi.ReplyKeyboardMarkup {
	var rows [][]tgbotapi.KeyboardButton
	for i := range posts {
		rows = append(rows, tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton(fmt.Sprintf("üóë –£–¥–∞–ª–∏—Ç—å %d", i+1)),
		))
	}
	rows = append(rows, tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")))
	return tgbotapi.NewReplyKeyboard(rows...)
}
