package sub

import (
	"database/sql"
	"fmt"
	"log"
	"math/big"
	"os"
	"strconv"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"mybot/db"
)

// ====== –ù–ê–°–¢–†–û–ô–ö–ò ======
// –ú–µ–Ω—è–µ—à—å —Ü–µ–Ω—É —Ç—É—Ç –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π:
const TonPaymentAmount = "12"                                              // —Ü–µ–Ω–∞ –≤ TON (–º–æ–∂–Ω–æ "12.5")
const TonWalletAddress = "UQA4ShIPiEIR9mTHFSNUGNCSOHQFheIC2OXyjVh22GvrgIKG" // –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è

// 1 TON = 1e9 –Ω–∞–Ω–æ—Ç–æ–Ω–æ–≤
func toNano(dec string) string {
	dec = strings.TrimSpace(dec)
	if dec == "" {
		return ""
	}
	// —Ç–æ—á–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–∏
	r, ok := new(big.Rat).SetString(dec)
	if !ok {
		return ""
	}
	// —É–º–Ω–æ–∂–∞–µ–º –Ω–∞ 1e9
	r.Mul(r, big.NewRat(1_000_000_000, 1))

	// –±–µ—Ä—ë–º floor: Num / Denom (–æ–±–∞ big.Int)
	num := new(big.Int).Set(r.Num())
	den := new(big.Int).Set(r.Denom())
	i := new(big.Int).Quo(num, den) // —Ü–µ–ª–∞—è —á–∞—Å—Ç—å

	return i.String()
}

// –°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–ª–∞—Ç–æ–π: –∞–¥—Ä–µ—Å, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ü–µ–Ω–∞ + –∫–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å @wallet
func SendPaymentPrompt(bot *tgbotapi.BotAPI, chatID int64, channelUsername string) {
	user := strings.TrimPrefix(strings.TrimSpace(channelUsername), "@")

	text := fmt.Sprintf(
		"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.\n\n"+
			"–°—Ç–æ–∏–º–æ—Å—Ç—å: *%s TON*.\n"+
			"–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ—à–µ–ª—ë–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –≤—Ä—É—á–Ω—É—é.\n\n"+
			"*–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:*\n`%s`\n"+
			"*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):*\n`channel:@%s`\n\n"+
			"üëâ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ *—é–∑–µ—Ä–Ω–µ–π–º –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞* (—Å `@`) –≤ –ø–æ–ª–µ ¬´–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—É—á–∞—Ç–µ–ª—é¬ª "+
			"—Ä–æ–≤–Ω–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n`channel:@yourchannel`\n\n"+
			"–í–∞–∂–Ω–æ: –ø–µ—Ä–µ–≤–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å **–Ω–µ –º–µ–Ω—å—à–µ %s TON**. "+
			"–ï—Å–ª–∏ —Å—É–º–º–∞ –º–µ–Ω—å—à–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 11.9 TON), –ø–æ–¥–ø–∏—Å–∫–∞ *–Ω–µ* –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è.",
		TonPaymentAmount,
		TonWalletAddress,
		user,
		TonPaymentAmount,
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "Markdown"
	btnOpen := tgbotapi.NewInlineKeyboardButtonURL("üß© –û—Ç–∫—Ä—ã—Ç—å –∫–æ—à–µ–ª—ë–∫ @wallet", "https://t.me/wallet/start")
	msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(btnOpen))
	if _, err := bot.Send(msg); err != nil {
		log.Println("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–ª–∞—Ç—ë–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", err)
	}
}

// –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –µ—Å–ª–∏ —Å—Ä–æ–∫ –≤ –±—É–¥—É—â–µ–º
func IsSubscriptionActive(ch *db.Channel) bool {
	if ch.SubscriptionUntil.IsZero() {
		return false
	}
	return ch.SubscriptionUntil.After(time.Now())
}

// –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º/–ø—Ä–æ–¥–ª–µ–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 –¥–Ω–µ–π; –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ SUB_DAYS)
func ActivateSubscription(dbConn *sql.DB, channelID int, walletAddress string) error {
	ch, err := db.GetChannelByID(dbConn, channelID)
	if err != nil {
		return err
	}

	days := 30
	if d, err := strconv.Atoi(os.Getenv("SUB_DAYS")); err == nil && d > 0 {
		days = d
	}
	now := time.Now()
	if ch.SubscriptionUntil.After(now) {
		ch.SubscriptionUntil = ch.SubscriptionUntil.AddDate(0, 0, days)
	} else {
		ch.SubscriptionUntil = now.AddDate(0, 0, days)
	}
	ch.WalletAddress = walletAddress
	return db.UpdateChannel(dbConn, &ch)
}

// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –≤—ã–∑–æ–≤–∞–º–∏ –≤ main.go
func SetDB(_ *sql.DB) {}

// sub/subscription.go ‚Äî –¥–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
func GuardActiveSubscription(bot *tgbotapi.BotAPI, dbConn *sql.DB, channelID int, channelTitle string, clientID int) bool {
	ch, err := db.GetChannelByID(dbConn, channelID)
	if err != nil {
		return false
	}
	if IsSubscriptionActive(&ch) {
		return true
	}

	var chatID int64
	_ = dbConn.QueryRow(`SELECT chat_id FROM clients WHERE id=$1`, clientID).Scan(&chatID)
	if chatID != 0 {
		bot.Send(tgbotapi.NewMessage(chatID,
			"‚õî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚Äî –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é."))
	}
	return false
}
